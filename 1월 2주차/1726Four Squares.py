import math

# 알고리즘 설명
# 1. 해당 정수의 제곱근을 구한다.

# =============개수가 1개인 경우===============
# 2. 해당 정수의 제곱근을 구해서 완전 제곱수(4,9,16 ...)이면 개수 1을 출력하고 종료

# =============개수가 2인 경우===============
# 3. 해당 정수의 제곱근까지 for문을 한번 돌린다.(제곱근의 제곱이 구할 수 있는 최대값 이기때문)
# 4. 만약에 n에서 i의 제곱을 뺐는데, 그 수가 완전 제곱수이면 i와, 그 뺀수로 이루어진 라그랑주 수이므로
# 5. 종료후 개수 2개를 출력

# =============개수가 3개인 경우===============
# 6. 아까와 마찬가지로 이번엔 해당 정수의 제곱근까지 이중 for문을 돌린다.
# 7. 만약에 n에서 i와 제곱과 j의 제곱을 뺐는데 완전 제곱수이면 i,j, 해당 뺀 수로 이루어진 라그랑주 수이므로
# 8. 종료 후 개수 3개를 출력

# =============개수가 4개인 경우===============
# 9. 이도저도 아니면 4개이므로 4개를 출력

# 처음에는 삼중for문을 통해서 탐색했지만, 34567의 경우 시간복잡도가 O(34567**3/2)라서 시간 초과 걸림.
# 그리고 예제는 다 통과했지만, 이유모를 틀렸습니다때문에 애먹었습니다.

n = int(input())

# 개수가 1개일때
if math.sqrt(n) == int(math.sqrt(n)):
    print(1)
    exit()

# 개수가 2개일때
for i in range(1, int(math.sqrt(n)) + 1):
    if math.sqrt(n - i**2) == int(math.sqrt(n - i**2)):
        print(2)
        exit()

# 개수가 3개일때
for i in range(1, int(math.sqrt(n)) + 1):
    for j in range(1, int(math.sqrt(n)) + 1):
        if i**2 + j**2 > n:
            break
        if math.sqrt(n - i**2 - j**2) == int(math.sqrt(n - i**2 - j**2)):
            print(3)
            exit()

# 개수가 4개일때
print(4)
